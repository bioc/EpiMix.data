useEnsembl("ensembl", dataset = "hsapiens_gene_ensembl", host =  host)
},  error = function(e) {
message(e)
for(mirror in c("asia","useast","uswest")){
x <- useEnsembl("ensembl",
dataset = "hsapiens_gene_ensembl",
mirror = mirror,
host =  host)
if(class(x) == "Mart") {
return(x)
}
}
return(NULL)
})
if(is.null(host)) {
message("Problems accessing ensembl database")
return(NULL)
}
#ensembl <- useEnsembl("ensembl", dataset = "hsapiens_gene_ensembl", host =  host)
attribute <- c("ensembl_gene_id", "external_gene_name", "chromosome_name")
filter <- c("external_gene_name")
ID <- getBM(attributes = attribute, filters = filter, values = FunctionalPairs$Gene,  mart = ensembl)
colnames(ID) = c("ENSG", "Gene")
FunctionalPairs <-merge(x = ID, y = FunctionalPairs,  by = "Gene", all.y = TRUE)
ensembl
ID
h_gene_sets = msigdbr(species = "Homo sapiens", category = "C6")
head(h_gene_sets)
grouped_genes = h_gene_sets %>%
group_by(gs_name) %>%
summarise(genes = paste0(gene_symbol, collapse = ";"))
grouped_genes
count(h_gene_sets$gs_name)
h_gene_sets$gs_name
table(h_gene_sets$gs_name)
as.data.frame(table(h_gene_sets$gs_name))
head(h_gene_sets)
master_sets = h_gene_sets
rm(h_gene_sets)
gene_sets = unqiue(master_sets$gs_name)
gene_sets = unique(master_sets$gs_name)
length(gene_sets)
CancerSite = "PRAD"
mRNA.dir = "/srv/gevaertlab/data/TCGA/all_type_mRNA_pancancer/"
mRNA.data = paste0(RNA.dir, CancerSite, "_mRNA.txt")
mRNA.data = read.table(mRNA.data, check.names = FALSE)
CancerSite = "PRAD"
mRNA.dir = "/srv/gevaertlab/data/TCGA/all_type_mRNA_pancancer/"
mRNA.data = paste0(mRNA.dir, CancerSite, "_mRNA.txt")
mRNA.data = read.table(mRNA.data, check.names = FALSE)
head(mRNA.data)
gene_sets = unique(master_sets$gs_name)
gene_sets
combined.data = matrix()
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = colSums(selected.genes)
combined.data = rbind(combined.data, this.data)
}
combined.data
i =1
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
genes
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
selected.genes
dim(selected.genes)
this.data = colSums(selected.genes)
this.data
this.data = rowSums(selected.genes)
this.data
selected.genes
this.data = colSums(selected.genes)
this.data
this.data = colSums(selected.genes, na.rm = TRUE)
this.data
this.data = colMeans(selected.genes, na.rm = TRUE)
this.data
this.data = colMeans(selected.genes, na.rm = TRUE, drop = FALSE)
this.data = as.matrix(colMeans(selected.genes, na.rm = TRUE))
this.data
this.data = colMeans(selected.genes, na.rm = TRUE)
class(this.data)
this.data
this.data = as.matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
this.data
dim(this.data)
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
this.data
this.set,
this.set
colnames(mRNA.data)
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1,  dimnames = list(this.set, colnames(mRNA.data)))
this.data
colMeans(selected.genes, na.rm = TRUE)
combined.data = matrix()
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1,  dimnames = list(this.set, colnames(mRNA.data)))
combined.data = rbind(combined.data, this.data)
}
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1,  dimnames = list(this.set, colnames(mRNA.data)))
combined.data = rbind(combined.data, this.data)
}
combined.data
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
print( combined.data )
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data), dimnames = list(this.set, colnames(mRNA.data)))
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
combined.data = rbind(combined.data, this.data)
}
combined.ata
combined.data
iterations = length(gene_sets)
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1,  dimnames = list(this.set, colnames(mRNA.data)))
combined.data[i, ] = this.data
}
combined.data
combined.data = matrix(,nrow = length(gene_sets), ncol= ncol(mRNA.data))
iterations = length(gene_sets)
for(i in 1:iterations){
print(i)
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
combined.data[i, ] = this.data
}
colnames(combined.data) = colnames(mRNA.data)
rownames(combined.data) = gene_sets
combined.data
combined.data[1:5,1:5]
i = 1
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
this.data[1:5]
i = 2
this.set = gene_sets[i]
cat("Processing", this.set, "\n")
genes = unique(master_sets$human_gene_symbol[which(master_sets$gs_name == this.set)])
cat("Found", length(genes), "unique genes in the", this.set, "set\n")
selected.genes = mRNA.data[genes,]
this.data = matrix(colMeans(selected.genes, na.rm = TRUE), nrow = 1)
this.data[1:5]
dim(combined.data)
combined.data = t(combined.data)
combined.data[1:5,1:5]
target.dir = "Results/"
write.table(combined.data, paste0(target.dir, CancerSite, "_", "oncogenic", "_mRNA.txt"))
target.dir = "Results/"
write.table(combined.data, paste0(target.dir, CancerSite, "_", "oncogenic", "_mRNA.txt"))
setwd("~/EpiMix")
BatchData <- readRDS("Annotation/TCGA_BatchData.rds")
TCGA_BatchData <- BatchData
save(TCGA_BatchData, "Epimix.data/data/TCGA_BatchData.rda")
save(TCGA_BatchData, file = "Epimix.data/data/TCGA_BatchData.rda")
save(TCGA_BatchData, file = "Epimix.data/data/TCGA_BatchData.rda")
save(TCGA_BatchData, file = "EpiMix.data/data/TCGA_BatchData.rda")
library(MethylMix)
data("METcancer")
data("METnormal")
METcancer
dim(METcancer)
dim(METnormal)
rownames(METcancer)
setwd(~/EpiMix)
regular <- readRDS("Results/TCGA_LUAD/EpiMix_Results_regular.rds")
setwd("~/EpiMix")
regular <- readRDS("Results/TCGA_LUAD/EpiMix_Results_regular.rds")
enhancer <- readRDS("Results/TCGA_LUAD/EpiMix_Results_enhancer.rds")
miRNA <- readRDS("Results/TCGA_LUAD/EpiMix_Results_miRNA.rds")
lncRNA <- readRDS("Results/TCGA_LUAD/EpiMix_Results_lncRNA.rds")
View(regular$FunctionalPairs)
regular.probes <- regular$FunctionalPairs$Probe[1:10]
View(enhancer$FunctionalPairs)
enhancer.probes <- unique(enhancer$FunctionalPairs$Probe)[1:10]
library(readr)
Survival_miRNA_Probes <- read_csv("Results/TCGA_LUAD/Survival_miRNA_Probes.csv",
col_types = cols(...1 = col_skip()))
View(Survival_miRNA_Probes)
Survival_miRNA_Probes <- read_csv("Results/TCGA_LUAD/Survival_miRNA_Probes.csv")
View(Survival_miRNA_Probes$Probe)
miRNA.probes <- Survival_miRNA_Probes$Probe[1:10]
lncRNA.probes <- lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene = "LINC00881")]
lncRNA.probes <- lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene == "LINC00881")]
lncRNA.probes
lncRNA.probes <- c(lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene == "LINC00881")],
lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene == "DIO3OS")])
lncRNA.probes
lncRNA.probes <- c(lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene == "LINC00881")],
"cg13126530", "cg16366843")
probes <- c(regular.probes, enhancer.probes, miRNA.probes, lncRNA.probes)
length(unique(probes))
probes <- unique(c(regular.probes, enhancer.probes, miRNA.probes, lncRNA.probes))
methylation.data <- readRDS("Data/TCGA_LUAD/MET_LUAD_Processed.rds")
METdata <- methylation.data[probes, ]
dim(METdata)
save(METdata, file = "Data/TCGA_LUAD/METdata.rda")
METdata
Survival_miRNA_Probes
miRNA.genes <- miRNA$FunctionalPairs$Gene[which(miRNA$FunctionalPairs$Probe %in% miRNA.probes)]
miRNA.genes
lncRNA.genes <- lncRNA$FunctionalPairs$Gene[which(lncRNA$FunctionalPairs$Probe %in% lncRNA.probes)]
lncRNA.genes
genes <- unique(c(regular.genes, enhancer.genes, miRNA.genes, lncRNA.genes))
regular.genes <- regular$FunctionalPairs$Gene[1:10]
enhancer.genes <- unique(enhancer$FunctionalPairs$Gene)[1:10]
miRNA.genes <- miRNA$FunctionalPairs$Gene[which(miRNA$FunctionalPairs$Probe %in% miRNA.probes)]
lncRNA.genes <- c("LINC00881", "DIO3OS")
genes <- unique(c(regular.genes, enhancer.genes, miRNA.genes, lncRNA.genes))
genes
View(regular$FunctionalPairs)
enhancer.genes <- enhancer$FunctionalPairs$Gene[which(enhancer$FunctionalPairs$Probe %in% enhancer.probes)]
enhancer.genes
regular.probes <- c("cg14029001", "cg00374492", "cg21462428", "cg03987115", "cg19351701", "cg21172377")
regular.genes <- c("CCND2", "CCND3", "HOXA9")
enhancer.probes <- c("cg00114710", "cg06493080", "cg06583549")
enhancer.genes <- enhancer$FunctionalPairs$Gene[which(enhancer$FunctionalPairs$Probe %in% enhancer.probes)]
miRNA.probes <- c("cg25950235", "cg14625175", "cg00909706", "cg11828163")
miRNA.genes <- miRNA$FunctionalPairs$Gene[which(miRNA$FunctionalPairs$Probe %in% miRNA.probes)]
lncRNA.probes <- c(lncRNA$FunctionalPairs$Probe[which(lncRNA$FunctionalPairs$Gene == "LINC00881")],
"cg13126530", "cg16366843")
lncRNA.genes <- c("LINC00881", "DIO3OS")
probes <- unique(c(regular.probes, enhancer.probes, miRNA.probes, lncRNA.probes))
genes <- unique(c(regular.genes, enhancer.genes, miRNA.genes, lncRNA.genes))
gene.expression <- readRDS("Data/TCGA_LUAD/GE_LUAD_Processed_mRNA.rds")
miRNA.expression <- readRDS("Data/TCGA_LUAD/GE_LUAD_Processed_miRNA.rds")
lncRNA.expression <- readRDS("Data/TCGA_LUAD/GE_LUAD_Processed_lncRNA.rds")
dim(gene.expression)
gene.expression[1:5,1:5]
miRNA.expression[1:5,1:5]
lncRNA.expression[1:5,1:5]
mRNA.data <- gene.expression[c(regular.genes, enhancer.genes),]
miRNA.data <- miRNA.expression[miRNA.genes,]
lncRNA.data <- lncRNA.expression[lncRNA.genes,]
dim(mRNA.data)
dim(miRNA.data)
miRNA.genes
dim(lncRNA.data)
save(mRNA.data, "Data/TCGA_LUAD/mRNA.data.rda")
save(miRNA.data, "Data/TCGA_LUAD/miRNA.data.rda")
save(lncRNA.data, "Data/TCGA_LUAD/lncRNA.data.rda")
save(mRNA.data, file = "Data/TCGA_LUAD/mRNA.data.rda")
save(miRNA.data, file = "Data/TCGA_LUAD/miRNA.data.rda")
save(lncRNA.data, file = "Data/TCGA_LUAD/lncRNA.data.rda")
setwd("~/EpiMix/EpiMix.data")
tools::add_datalist("~/EpiMix/EpiMix.data", force = T)
MET.data <- methylation.data[probes, ]
save(MET.data, file = "Data/TCGA_LUAD/METdata.rda")
setwd("~/EpiMix")
MET.data <- methylation.data[probes, ]
save(MET.data, file = "Data/TCGA_LUAD/METdata.rda")
save(MET.data, file = "Data/TCGA_LUAD/MET.data.rda")
setwd("~/EpiMix/EpiMix.data")
tools::add_datalist("~/EpiMix/EpiMix.data", force = T)
dim(MET.data)
devtools::document(roclets=c('rd', 'collate', 'namespace'))
setwd("~/EpiMix/EpiMix.data/data")
devtools::document(roclets=c('rd', 'collate', 'namespace'))
library(EpiMix.data)
load("EPIC_lncRNA_probes.rda")
load("data/EPIC_lncRNA_probes.rda")
data("HM450_miRNA_probes")
data("EPIC_lncRNA_probes")
setwd("~/EpiMix")
library(tidyr)
library(dplyr)
library(GenomicRanges)
library(RCurl)
library(ape)
plat = "HM27"
hsa.gffs = read.gff("Annotation/miRbase.hsa.gff3", na.strings = c(".", "?"), GFF3 = TRUE)
hsa.gffs = hsa.gffs[hsa.gffs$type == "miRNA_primary_transcript", ]
dim(hsa.gffs) #1918,9
# extract the miR IDs and miRNA names from the attribute column
IDs = sapply(hsa.gffs$attributes, function(x) unlist(strsplit(x, ";"))[1])
IDs = unname(sapply(IDs, function(x) substr(x, 4, nchar(x))))
Names = sapply(hsa.gffs$attributes, function(x) unlist(strsplit(x, ";"))[3])
Names = unname(sapply(Names, function(x) substr(x, 6, nchar(x))))
# convert the gff dataframe to GRange object, note that we need to give a 5KB offset for each miRNA gene to map the probes
gr.hsa.gffs = GRanges(seqnames = hsa.gffs$seqid, ranges = IRanges(start = hsa.gffs$start - 5000, end = hsa.gffs$end + 5000))
names(gr.hsa.gffs) = Names
values(gr.hsa.gffs) = data.frame(ID = IDs)
# find overlaps between probes and miRNA genes
ProbeAnnotation = getInfiniumAnnotation(plat = plat, genome = "hg38")
hits = findOverlaps(ProbeAnnotation, gr.hsa.gffs, ignore.strand = TRUE)
miRNA.probes = data.frame(probe = names(ProbeAnnotation)[queryHits(hits)], gene = names(gr.hsa.gffs)[subjectHits(hits)])
# map precursor names to HGNC
df.gene.names = mapTranscriptToGene(miRNA.probes$gene)
colnames(df.gene.names) = c("gene", "HGNC")
miRNA.probes = merge(miRNA.probes, df.gene.names)
miRNA.probes = distinct(miRNA.probes)
miRNA.probes = miRNA.probes[,c("probe", "gene", "HGNC")]
source("EpiMix_R/R/TCGA_Download_Preprocess.R")
source("EpiMix_R/R/GEO_Download_Preprocess.R")
source("EpiMix_R/R/util.R")
source("EpiMix_R/R/EpiMix.R")
source("EpiMix_R/R/MethylMix.R")
source("EpiMix_R/R/GetNearbyGenes.R")
# find overlaps between probes and miRNA genes
ProbeAnnotation = EpiMix_getInfiniumAnnotation(plat = plat, genome = "hg38")
hits = findOverlaps(ProbeAnnotation, gr.hsa.gffs, ignore.strand = TRUE)
miRNA.probes = data.frame(probe = names(ProbeAnnotation)[queryHits(hits)], gene = names(gr.hsa.gffs)[subjectHits(hits)])
# map precursor names to HGNC
df.gene.names = mapTranscriptToGene(miRNA.probes$gene)
colnames(df.gene.names) = c("gene", "HGNC")
miRNA.probes = merge(miRNA.probes, df.gene.names)
miRNA.probes = distinct(miRNA.probes)
miRNA.probes = miRNA.probes[,c("probe", "gene", "HGNC")]
saveRDS(miRNA.probes, paste0("Annotation/",plat, "_miRNA_probes.rds"))
length(miRNA.probes)
library(EpiMix.data)
devtools::document()
library(EpiMix.data)
devtools::document()
sourceDir <- "~/EpiMix/Test"
Sample_EpiMixResults_Regular <- paste0(sourceDir, "/", "EpiMix_Results_regular.rds")
Sample_EpiMixResults_Regular <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_regular.rds"))
Sample_EpiMixResults_Enhancer <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_enhancer.rds"))
Sample_EpiMixResults_miRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_miRNA.rds"))
Sample_EpiMixResults_lncRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_lncRNA.rds"))
paste0(sourceDir, "/", "EpiMix_Results_regular.rds")
sourceDir <- "~/EpiMix/Test"
outputDir <- "~/EpiMix/EpiMix.data/data"
Sample_EpiMixResults_Regular <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_regular.rds"))
Sample_EpiMixResults_miRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_miRNA.rds"))
Sample_EpiMixResults_lncRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_lncRNA.rds"))
Sample_EpiMixResults_Regular <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_regular.rds"))
Sample_EpiMixResults_miRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_mirna.rds"))
Sample_EpiMixResults_lncRNA <- readRDS(paste0(sourceDir, "/", "EpiMix_Results_lncrna.rds"))
save(Sample_EpiMixResults_Regular, file = paste0(outputDir, "/", "Sample_EpiMixResults_Regular.rda"))
save(Sample_EpiMixResults_miRNA, file = paste0(outputDir, "/", "Sample_EpiMixResults_miRNA.rda"))
save(Sample_EpiMixResults_lncRNA, file = paste0(outputDir, "/", "Sample_EpiMixResults_lncRNA.rda"))
tools::add_datalist("~/EpiMix/EpiMix.data", force = T)
devtools::document()
methylation.data <- readRDS("Data/TCGA_LUAD/MET_LUAD_Processed.rds")
setwd("~/EpiMix")
methylation.data <- readRDS("Data/TCGA_LUAD/MET_LUAD_Processed.rds")
methylation.data <- readRDS("Data/TCGA_LUAD/MET_LUAD_Processed.rds")
sample.info = TCGA_GetSampleInfo(methylation.data, CancerSite = "LUAD", targetDirectory = "")
library(EpiMix)
setwd("~/EpiMix/Data/TCGA_LUAD")
setwd("~/EpiMix")
sample.info = read.csv("~/EpiMix/Data/TCGA_LUAD/sample.info.csv")
sample.info
LUAD.sample.annotation = read.csv("~/EpiMix/Data/TCGA_LUAD/sample.info.csv")
save(LUAD.sample.annotation, file = paste0(outputDir, "/", "LUAD.sample.annotation.rda"))
devtools::document()
setwd("~/EpiMix/EpiMix.data")
devtools::document()
setwd("~/EpiMix/EpiMix_R")
sourceDir = "~/EpiMix/EpiMix.data/data"
filenames <- list.dirs(sourceDir)
filenames <- filenames[grep(".rda", filenames)]
filenames
grep(".rda", filenames)
filenames <- list.dirs(sourceDir)
filenames
sourceDir = "~/EpiMix/EpiMix.data/data"
filenames <- list.files(sourceDir)
filenames1 <- filenames[grep(".rda", filenames)]
filenames1
file = filenames1[1]
data = load(file)
file
data = load(paste0(sourceDir, "/", file))
paste0(sourceDir, "/", file)
save(data, file=paste0(sourceDir, "/", file) , compress='xz')
data = load(paste0(sourceDir, "/", file))
data
file
file
data
setwd("~/EpiMix")
library(tidyr)
library(dplyr)
library(GenomicRanges)
library(RCurl)
library(tidyr)
library(dplyr)
library(GenomicRanges)
library(RCurl)
paste0('Annotation/', met.platform, "ProbeAnnotation.rds")
met.platform <- "EPIC"
paste0('Annotation/', met.platform, "ProbeAnnotation.rds")
paste0('Annotation/', met.platform, "ProbeAnnotation.rds")
paste0("Annotation/", met.platform, "_", target, "_probes.rds")
target = "lncRNA"
paste0("Annotation/", met.platform, "_", target, "_probes.rds")
met.platform = "EPIC"
target = "lncRNA"
ProbeAnnotation = readRDS(paste0('Annotation/', met.platform, "ProbeAnnotation.rds"))
data = readRDS("Annotation/EPIC_lncRNA_probes.rds")
data
save(data, file = "EpiMix.data/data/EPIC_lncRNA_probes.rda", compress = "xz")
new_data = load(file = "EpiMix.data/data/EPIC_lncRNA_probes.rda")
new_data
data
EPIC_lncRNA_probes = readRDS("Annotation/EPIC_lncRNA_probes")
EPIC_lncRNA_probes = readRDS("Annotation/EPIC_lncRNA_probes.rds")
save(EPIC_lncRNA_probes, file = "EpiMix.data/data/EPIC_lncRNA_probes.rda")
save(EPIC_lncRNA_probes, file = "EpiMix.data/data/EPIC_lncRNA_probes.rda", compress = "xy")
save(EPIC_lncRNA_probes, file = "EpiMix.data/data/EPIC_lncRNA_probes.rda", compress = "xz")
new_data = load("EpiMix.data/data/EPIC_lncRNA_probes.rda")
new_data
load("~/EpiMix/EpiMix.data/data/EPIC_lncRNA_probes.rda")
load(~/EpiMix/EpiMix.data/data/EPIC_lncRNA_probes.rda)
load("~/EpiMix/EpiMix.data/data/EPIC_lncRNA_probes.rda")
sourceDir = "~/EpiMix/EpiMix.data/data"
filenames <- list.files(sourceDir)
filenames1 <- filenames[grep(".rda", filenames)]
filenames1
file = filenames1[1]
file
target.data = load(paste0(sourceDir, "/", file))
target.data
file
target.data = readRDS(paste0(sourceDir, "/", file))
target.data
get(target.data)
save(get(target.data), file=paste0(sourceDir, "/", "test_file.rda") , compress='xz')
actual.data = get(target.data)
save(actual.data, file=paste0(sourceDir, "/", "test_file.rda") , compress='xz')
load("~/EpiMix/EpiMix.data/data/test_file.rda")
sourceDir = "~/EpiMix/EpiMix.data/data"
filenames <- list.files(sourceDir)
filenames1 <- filenames[grep(".rda", filenames)]
file = filenames1[1]
file
target.data = load(paste0(sourceDir, "/", file))
target.data
get(target.data)
assgin(target.data, get(target.data))
assign(target.data, get(target.data))
target.data
?save
sourceDir = "~/EpiMix/EpiMix.data/data"
filenames <- list.files(sourceDir)
filenames1 <- filenames[grep(".rda", filenames)]
file = filenames1[1]
file
target.data = load(paste0(sourceDir, "/", file))
target.data
save(list(target.data), file=paste0(targetDir, "/", file) , compress='xz')
target.data
list(target.data)
save(list = target.data, file=paste0(targetDir, "/", file) , compress='xz')
targetDir = "~/EpiMix/EpiMix.data/data1"
save(list = target.data, file=paste0(targetDir, "/", file) , compress='xz')
load("~/EpiMix/EpiMix.data/data1/EPIC_lncRNA_probes.rda")
sourceDir = "~/EpiMix/EpiMix.data/data"
targetDir = "~/EpiMix/EpiMix.data/data1"
filenames <- list.files(sourceDir)
filenames1 <- filenames[grep(".rda", filenames)]
for(file in filenames1){
cat("Processing data", file, "\n")
target.data = load(paste0(sourceDir, "/", file))
save(list = target.data, file=paste0(targetDir, "/", file) , compress='xz')
}
load("~/EpiMix/EpiMix.data/data1/EPIC_lncRNA_probes.rda")
load("~/EpiMix/EpiMix.data/data1/EPIC_miRNA_probes.rda")
load("~/EpiMix/EpiMix.data/data1/HM450_miRNA_probes.rda")
library(EpiMix.data)
